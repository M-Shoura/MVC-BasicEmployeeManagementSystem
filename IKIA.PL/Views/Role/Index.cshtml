@model IEnumerable<RoleViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Roles</h1>
<br />

<a asp-controller="Role" asp-action="Create" class="btn btn-primary">Create New Role</a>

<form asp-action="Index" method="get" class="mt-5 row justify-content-center align-items-center">
    <div class="row col-8">
        <div class="col-8">
            <input type="text" name="search" class="form-control" id="searchInp" placeholder="Search By Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </div>
</form>



@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover mt-4">
        <thead class="text-center">
            <tr>
                <th>@Html.DisplayNameFor(e => e.Id)</th>
                <th>@Html.DisplayNameFor(e => e.Name)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
                <th>Delete With Modal</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var role in Model)
            {
                <tr>
                    <td class="col-2">@Html.DisplayFor(x => role.Id)</td>
                    <td class="col-4">@Html.DisplayFor(x => role.Name)</td>
                    <partial name="PartialViews/_IndexBottonsPartialView" model="@role.Id" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info mt-3">
        <h3>There is no Roles !!</h3>
    </div>
}